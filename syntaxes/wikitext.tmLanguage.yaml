################################################################################################
#  Copyright (c) Rowe Wilson Frederisk Holme. All rights reserved.
#  Licensed under the MIT License. See License.txt in the project root for license information.
################################################################################################

---
$schema: "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json"
name: Wikitext
scopeName: source.wikitext
patterns:
  - include: "#wikitext"
  - include: text.html.basic
repository:
  # wikitext: https://www.mediawiki.org/wiki/Wikitext
  wikitext:
    patterns:
      - include: "#argument"
      - include: "#entity"
      - include: "#signature"
      - include: "#redirect"
      - include: "#magicWords"
      - include: "#convert"
      - include: "#list"
      - include: "#table"
      - include: "#fontStyle"
      - include: "#externalLink"
      - include: "#internalLink"
      - include: "#template"
      - include: "#heading"
      - include: "#break"
      - include: "#wikixml"
      - include: "#extensionComments"
    repository:
      extensionComments:
        name: comment.block.documentation.special.extension.wikitext
        begin: (<%--)\s*(\[)([A-Z_]*)(\])
        #      1<%--1   2 [23TYPENAM34] 4
        end: (\[)([A-Z_]*)(\])\s*(--%>)
        #    1 [12TYPENAM23 ]3   4--%>4
        beginCaptures:
          1:
            name: punctuation.definition.comment.extension.wikitext
          2:
            name: punctuation.definition.tag.extension.wikitext
          3:
            name: storage.type.extension.wikitext
          4:
            name: punctuation.definition.tag.extension.wikitext
        endCaptures:
          1:
            name: punctuation.definition.tag.extension.wikitext
          2:
            name: storage.type.extension.wikitext
          3:
            name: punctuation.definition.tag.extension.wikitext
          4:
            name: punctuation.definition.comment.extension.wikitext
        patterns:
          - match: (\w*)\s*(=)\s*(#)(.*?)(#)
            #      1key1   2=2   3#34vlu45#5
            captures:
              0:
                name: meta.object.member.extension.wikitext
              1:
                name: meta.object-literal.key.extension.wikitext
              2:
                name: punctuation.separator.dictionary.key-value.extension.wikitext
              3:
                name: punctuation.definition.string.begin.extension.wikitext
              4:
                name: string.quoted.other.extension.wikitext
              5:
                name: punctuation.definition.string.end.extension.wikitext
      convert:
        begin: (-\{)([a-zA-Z](\|))?
        #      1 -{ 12     tag3| 32
        #      -{T|
        end: (\}-)
        #    1 }- 1
        # name: meta.
        captures:
          1:
            name: punctuation.definition.tag.template.wikitext
          2:
            name: entity.name.function.type.wikitext
          3:
            name: keyword.operator.wikitext
        patterns:
          - include: $self
          - match: (?:([a-zA-Z\-]*)(:))?(.*?)(?:(;)|(?=\}-))
            # - match: ([a-zA-Z\-]*)(:)(.*?)(?:(;)?|(?=\}-))
            #          1    tag-   12:23txt3   4;4     }-
            captures:
              1:
                name: entity.name.tag.language.wikitext
              2:
                name: punctuation.separator.key-value.wikitext
              3:
                name: string.unquoted.text.wikitext
              4:
                name: punctuation.terminator.rule.wikitext
      break:
        match: "^-{4,}"
        #      ----
        name: markup.changed.wikitext
      template:
        begin: >-
          (\{\{)\s*(([\w\-\s\(\)\.]*(:))*)\s*((#[\w\-\s\(\)\.]+(:))*)([\w\-\s\(\)\.]*)
        # 1 {{ 1   23  namespace    4:43 2   56#   function    7:76 58     name      8
        end: (\}\})
        #    1 }} 1
        captures:
          1:
            name: punctuation.definition.tag.template.wikitext
          2:
            name: entity.name.tag.localname.wikitext
          # 3:
          4:
            name: punctuation.separator.namespace.wikitext
          5:
            name: entity.name.function.wikitext
          # 6:
          7:
            name: punctuation.separator.namespace.wikitext
          8:
            name: entity.name.tag.localname.wikitext
        # name:
        patterns:
          - include: $self
          - match: (\|)
            #      1 |1
            name: keyword.operator.wikitext
          - match: (?<=\|)\s*(?:([-\w.]+)(:))?([-\w\s\.:]+)\s*(=)
            #           |       1       12:2  4           4   5=5
            captures:
              1:
                name: entity.other.attribute-name.namespace.wikitext
              2:
                name: punctuation.separator.namespace.wikitext
              3:
                name: entity.other.attribute-name.localname.wikitext
              4:
                name: keyword.operator.equal.wikitext
      externalLink:
        patterns:
          - name: meta.link.external.wikitext
            match: (\[)((?:(?:(?:http(?:s)?)|(?:ftp(?:s)?)):\/\/)[\w.-]+(?:\.[\w\.-]+)+[\w\-\.~:\/?#%@!\$&'\(\)\*\+,;=.]+)\s*?([^\]]*)(\])
            captures:
              1:
                name: punctuation.definition.tag.link.external.wikitext
              2:
                name: entity.name.tag.url.wikitext
              3:
                name: string.other.link.external.title.wikitext
                patterns:
                  - include: $self
              4:
                name: punctuation.definition.tag.link.external.wikitext
          - name: invalid.illegal.bad-url.wikitext
            match: (\[)([\w.-]+(?:\.[\w\.-]+)+[\w\-\.~:\/?#%@!\$&''\(\)\*\+,;=.]+)\s*?([^\]]*)(\])
            captures:
              1:
                name: punctuation.definition.tag.link.external.wikitext
              2:
                name: entity.name.tag.url.wikitext
              3:
                name: string.other.link.external.title.wikitext
                patterns:
                  - include: $self
              4:
                name: punctuation.definition.tag.link.external.wikitext
      redirect:
        patterns:
          - match: >-
              (?i)(^\s*?#REDIRECT)\s*?(\[\[)(([\w\-\s\(\)\.]*?:)*)?([^\|\[\]]*)?(\|[^\[\]]*?)?(\]\])
            #     1     #REDIRECT1    2 [[ 234  namespace     :4 3 5  name    5 6 | other   6 7 ]] 7
            captures:
              1:
                name: keyword.control.redirect.wikitext
              2:
                name: punctuation.definition.tag.link.internal.begin.wikitext
              3:
                name: entity.name.tag.namespace.wikitext
              4:
              5:
                name: entity.other.attribute-name.wikitext
              6:
                name: invalid.deprecated.ineffective.wikitext
              7:
                name: punctuation.definition.tag.link.internal.end.wikitext
      magicWords:
        patterns:
          - include: "#behaviorSwitches"
          - include: "#outdatedBehaviorSwitches"
          - include: "#variables"
        repository:
          behaviorSwitches:
            name: constant.language.behaviorswitches.wikitext
            match: |-
              (?x)      # turn on extended mode
                (?i)    # ignore case
                  (__)  # start: __
                    (
                      NOTOC|FORCETOC|TOC|NOEDITSECTION|NEWSECTIONLINK|NOGALLERY|HIDDENCAT|EXPECTUNUSEDCATEGORY|NOCONTENTCONVERT|NOCC|NOTITLECONVERT|NOTC|INDEX|NOINDEX|STATICREDIRECT|NOGLOBAL|DISAMBIG
                    )
                  (__)
          outdatedBehaviorSwitches:
            name: invalid.deprecated.behaviorswitches.wikitext
            match: |-
              (?x)
                (?i)
                  (__)
                    (
                      START|END
                    )
                  (__)
          variables:
            patterns:
              - name: constant.language.variables.time.wikitext
                match: |-
                  (?x)
                    (?i)
                      (\{\{)
                        (
                          CURRENTYEAR|CURRENTMONTH|CURRENTMONTH1|CURRENTMONTHNAME|CURRENTMONTHNAMEGEN|CURRENTMONTHABBREV|CURRENTDAY|CURRENTDAY2|CURRENTDOW|CURRENTDAYNAME|CURRENTTIME|CURRENTHOUR|CURRENTWEEK|CURRENTTIMESTAMP|LOCALYEAR|LOCALMONTH|LOCALMONTH1|LOCALMONTHNAME|LOCALMONTHNAMEGEN|LOCALMONTHABBREV|LOCALDAY|LOCALDAY2|LOCALDOW|LOCALDAYNAME|LOCALTIME|LOCALHOUR|LOCALWEEK|LOCALTIMESTAMP
                        )
                      (\}\})
              - name: constant.language.variables.metadata.wikitext
                match: |-
                  (?x)
                    (?i)
                      (\{\{)
                        (
                          SITENAME|SERVER|SERVERNAME|DIRMARK|DIRECTIONMARK|SCRIPTPATH|STYLEPATH|CURRENTVERSION|CONTENTLANGUAGE|CONTENTLANG|PAGEID|PAGELANGUAGE|CASCADINGSOURCES|REVISIONID|REVISIONDAY|REVISIONDAY2|REVISIONMONTH|REVISIONMONTH1|REVISIONYEAR|REVISIONTIMESTAMP|REVISIONUSER|REVISIONSIZE
                        )
                      (\}\})
              # TODO:
              # - commonsname: constant.language.variables.metadata.wikitext
              #   commonsmatch: |-
              #     (?i)(\{\{)(PROTECTIONLEVEL|PROTECTIONEXPIRY|DISPLAYTITLE|DEFAULTSORTKEY|DEFAULTCATEGORYSORT)(:[\w\-\s\(\)\.\|]*)?(\}\})
              # - commonsname: constant.language.variables.statistical.wikitext
              #   commonsmatch: |
              #     (?i)(\{\{)(NUMBEROFPAGES|NUMBEROFARTICLES|NUMBEROFFILES|NUMBEROFEDITS|NUMBEROFVIEWS|NUMBEROFUSERS|NUMBEROFADMINS|NUMBEROFACTIVEUSERS(?:(:R)?))(\}\})
              # - commonsname: constant.language.variables.statistical.wikitext
              #   commonsmatch: |-
              #     (?i)(\{\{)(PAGESINCATEGORY|PAGESINCAT|PAGESINCATEGORY|NUMBERINGROUP|NUMINGROUP|PAGESINNS|PAGESINNAMESPACE)(:[\w\-\s\(\)\.\|]*)?(\}\})
              # - commons: ""
              #   "": >-
              #     (?i)(\{\{)(FULLPAGENAME|PAGENAME|BASEPAGENAME|ROOTPAGENAME|SUBPAGENAME|SUBJECTPAGENAME|ARTICLEPAGENAME|TALKPAGENAME|FULLPAGENAMEE|PAGENAMEE|BASEPAGENAMEE|SUBPAGENAMEE|SUBJECTPAGENAMEE|TALKPAGENAMEE)(:[\w\-\s\(\)\.\|]*)?(\}\})
              # - commons: ""
              #   "": >-
              #     (?i)(\{\{)(NAMESPACE|SUBJECTSPACE|ARTICLESPACE|TALKSPACE|NAMESPACEE|SUBJECTSPACEE|TALKSPACEE)(\}\})
              # - commons: ""
              #   "": (\{\{)(!)(\}\})
              # END_TODO:
              - name: constant.language.variables.isbn.wikitext
                match: ISBN\s+((9[\-\s]?7[\-\s]?[89][\-\s]?)?([0-9][\-\s]?){10})
                #       ISBN   129  -    7   -    8     -   2 3  0     -   3    1
                #       ISBN     978-12345-6789-0
              - name: constant.language.variables.rfc.wikitext
                match: RFC\s+[0-9]+
                #       RFC     0
              - name: constant.language.variables.pmid.wikitext
                match: PMID\s+[0-9]+
                #       PMID     0
      signature:
        patterns:
          - name: keyword.other.signature.wikitext
            match: "~{3,5}"
            #       ~~~~
      list:
        name: markup.list.wikitext
        patterns:
          - match: "^([#*;:]+)"
            captures:
              1:
                name: punctuation.definition.list.begin.markdown.wikitext
      argument:
        name: variable.parameter.wikitext
        begin: ({{{)
        end: (}}})
        patterns:
          - include: $self
          - match: ([\w\-\s\(\)\.]*)(\|)?
            #         1    string     12 |2
            captures:
              1:
                name: variable.other.wikitext
              2:
                name: keyword.operator.wikitext
      heading:
        name: markup.heading.wikitext
        match: '^(={1,6})\s*(.+?)\s*(={1,6})$'
        #        1======1   2cha2   3======3
        captures:
          2:
            patterns:
              - include: $self
      fontStyle:
        patterns:
          - include: "#bold"
          - include: "#italic"
        repository:
          bold:
            begin: (''')
            end: (''')|$
            name: markup.bold.wikitext
            patterns:
              - include: "#italic"
              - include: $self
          italic:
            begin: ('')
            end: ((?=[^'])|(?=''))''((?=[^'])|(?=''))|$
            name: markup.italic.wikitext
            patterns:
              - include: "#bold"
              - include: $self
      internalLink:
        TODO: SINGLE LINE
        name: string.quoted.wikitext
        begin: (\[\[)(([\w\-\s\(\)\.]*:)*)?([^\|\[\]]*)?
        #      1 [[ 123  namespace    :3 2 4   name   4
        end: (\]\])
        captures:
          1:
            name: punctuation.definition.tag.link.internal.wikitext
          2:
            name: entity.name.tag.namespace.wikitext
          # 3:
          4:
            name: entity.other.attribute-name.wikitext
        patterns:
          - include: $self
          - match: (\|)|(?:\s*)(?:([-\w.]+)((:)))?([-\w.:]+)\s*(=)
            #       1 |1           2 space 234:432 5  word  5   6=6
            # TODO:
            captures:
              1:
                name: keyword.operator.wikitext
              5:
                name: entity.other.attribute-name.localname.wikitext
      # table: https://www.mediawiki.org/wiki/Help:Tables
      table:
        patterns:
          - name: meta.tag.block.table.wikitext
            begin: '^\s*(\{\|)(.*?)$'
            #           1 {| 12tag2
            end: '^\s*(\|\})'
            #         1 |} 2
            captures:
              1:
                name: punctuation.definition.tag.table.wikitext
              2:
                patterns:
                  - include: "#tagStuff"
            patterns:
              - include: $self
              - include: "#tagStuff"
              - name: meta.tag.block.table-row.wikitext
                begin: '^\s*(\|-)\s*'
                #           1 |- 1
                end: $
                beginCaptures:
                  1:
                    name: punctuation.definition.tag.begin.wikitext
                patterns:
                  - include: $self
                  - include: "#tagStuff"
                  - name: invalid.illegal.bad-table-context.wikitext
                    match: '\|.*'
              - name: meta.tag.block.th.heading
                begin: ^\s*(!)((.*?)(\|))?(.*?)(?=(!!)|$)
                #          1!123any34 |42 5bdy5    !!
                end: $
                beginCaptures:
                  1:
                    name: punctuation.definition.tag.begin.wikitext
                  2:
                  3:
                    patterns:
                      - include: $self
                      - include: "#tagStuff"
                  4:
                    name: punctuation.definition.tag.wikitext
                  5:
                    name: markup.bold.style.wikitext
                patterns:
                  - name: meta.tag.block.th.inline.wikitext
                    match: (!!)((.*?)(\|))?(.*?)(?=(!!)|$)
                    captures:
                      1:
                        name: punctuation.definition.tag.begin.wikitext
                      3:
                        patterns:
                          - include: "#tagStuff"
                          - include: $self
                      4:
                        name: punctuation.definition.tag.wikitext
                      5:
                        name: markup.bold.style.wikitext
                  - include: $self
              - name: meta.tag.block.caption.wikitext
                match: ^\s*(\|\+)(.*?)$
                captures:
                  1:
                    name: punctuation.definition.tag.begin.wikitext
                  2:
                    name: string.unquoted.caption.wikitext
                end: $
                patterns:
                  - include: $self
              - name: string.quoted.wikitext
                begin: ^\s*(\|)
                end: $
                beginCaptures:
                  1:
                    name: punctuation.definition.tag.wikitext
                  2:
                    patterns:
                      - include: "#tagStuff"
                  3:
                    name: punctuation.definition.tag.wikitext
                patterns:
                  - include: $self
                  - match: \|\|
                    name: keyword.operator.wikitext
      wikixml:
        patterns:
          - include: "#wikitag"
          - include: "#nowiki"
          - include: "#ref"
          - include: "#jsonin"
          - include: "#math"
        repository:
          nowiki:
            contentName: meta.embedded.block.plaintext
            begin: (?i)(<)(nowiki)(\s+[^>]+)?\s*(>)
            #          1<12nowiki2    3a="a"34>4
            beginCaptures:
              0:
                name: meta.tag.metadata.nowiki.start.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                patterns:
                  - match: " ([a-zA-Z-]+)"
                    captures:
                      1:
                        name: entity.other.attribute-name.wikitext
                  - include: "#doublequotedString"
                  - include: "#singlequotedString"
                  - include: $self
              4:
                name: punctuation.definition.tag.end.wikitext
            end: (?i)(</)(nowiki)\s*(>)
            endCaptures:
              0:
                name: meta.tag.metadata.nowiki.end.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                name: punctuation.definition.tag.end.wikitext
          wikitag:
            match: (?i)(<)(templatestyles|ref|nowiki)(\s+[^>]+)?\s*(/>)
            #          1<12templatestyles23  h=here3    4/>4
            captures:
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                patterns:
                  - match: " ([a-zA-Z-]+)"
                    captures:
                      1:
                        name: entity.other.attribute-name.wikitext
                  - include: "#doublequotedString"
                  - include: "#singlequotedString"
                  - include: $self
              4: punctuation.definition.tag.end.wikitext
            name: meta.tag.metedata.void.wikitext
          ref:
            contentName: meta.block.ref.wikitext
            begin: (?i)(<)(ref)(\s+[^>]+)?\s*(>)
            beginCaptures:
              0:
                name: meta.tag.metadata.ref.start.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                patterns:
                  - match: " ([a-zA-Z-]+)"
                    captures:
                      1:
                        name: entity.other.attribute-name.wikitext
                  - include: "#doublequotedString"
                  - include: "#singlequotedString"
                  - include: $self
              4:
                name: punctuation.definition.tag.end.wikitext
            end: (?i)(</)(ref)\s*(>)
            endCaptures:
              0:
                name: meta.tag.metadata.ref.end.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                name: punctuation.definition.tag.end.wikitext
            patterns:
              - include: $self
          jsonin:
            begin: (?i)(<)(graph|templatedata)(\s+[^>]+)?\s*(>)
            beginCaptures:
              0:
                name: meta.tag.metadata.start.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                patterns:
                  - match: " ([a-zA-Z-]+)"
                    captures:
                      1:
                        name: entity.other.attribute-name.wikitext
                  - include: "#doublequotedString"
                  - include: "#singlequotedString"
                  - include: $self
              4:
                name: punctuation.definition.tag.end.wikitext
            end: (?i)(</)(graph|templatedata)\s*(>)
            endCaptures:
              0:
                name: meta.tag.metadata.end.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                name: punctuation.definition.tag.end.wikitext
            contentName: meta.embedded.block.json
            patterns:
              - include: source.json
          math:
            begin: (?i)(<)(math)(\s+[^>]+)?\s*(>)
            beginCaptures:
              0:
                name: meta.tag.metadata.start.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                patterns:
                  - match: " ([a-zA-Z-]+)"
                    captures:
                      1:
                        name: entity.other.attribute-name.wikitext
                  - include: "#doublequotedString"
                  - include: "#singlequotedString"
                  - include: $self
              4:
                name: punctuation.definition.tag.end.wikitext
            end: (?i)(</)(math)\s*(>)
            endCaptures:
              0:
                name: meta.tag.metadata.end.wikitext
              1:
                name: punctuation.definition.tag.begin.wikitext
              2:
                name: entity.name.tag.wikitext
              3:
                name: punctuation.definition.tag.end.wikitext
            contentName: meta.embedded.block.latex
            patterns:
              - include: text.tex.latex
  ## public
  doublequotedString:
    begin: '"'
    beginCaptures:
      0:
        name: punctuation.definition.string.begin.wikitext
    end: '"'
    endCaptures:
      0:
        name: punctuation.definition.string.end.wikitext
    name: string.quoted.double.wikitext
    patterns:
      - include: "#entity"
      - include: "#bare-ampersand"
  tagStuff:
    patterns:
      - match: (?:\s*)(?:([-\w.]+)((:)))?([-\w.:]+)\s*(=)
        #       1 space 123:321 4  name  4   5=5
        captures:
          1:
            name: entity.other.attribute-name.namespace.wikitext
          2:
            name: entity.other.attribute-name.wikitext
          3:
            name: punctuation.separator.namespace.wikitext
          4:
            name: entity.other.attribute-name.localname.wikitext
          5:
            name: keyword.operator.equal.wikitext
      - include: "#doublequotedString"
      - include: "#singlequotedString"
  singlequotedString:
    begin: "'"
    beginCaptures:
      0:
        name: punctuation.definition.string.begin.wikitext
    end: "'"
    endCaptures:
      0:
        name: punctuation.definition.string.end.wikitext
    name: string.quoted.single.wikitext
    patterns:
      - include: "#entity"
      - include: "#bare-ampersand"
  bare-ampersand:
    match: "&"
    name: invalid.illegal.bad-ampersand.wikitext
  #
  entity:
    name: constant.character.entity.wikitext
    match: "(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)"
    #       1&12     :       str           #  0    #x    Hex     23;3
    captures:
      1:
        name: punctuation.definition.constant.wikitext
      3:
        name: punctuation.definition.constant.wikitext
